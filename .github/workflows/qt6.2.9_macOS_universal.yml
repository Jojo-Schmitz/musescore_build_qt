name: "Qt 6.2.9 - macOS - Universal"

on:
  workflow_dispatch:

jobs:
  build_qt:
    runs-on: macos-latest
    steps:
      - name: Setup
        run: |
          brew install cmake ninja
      - name: Download and unpack source
        run: |
          set -o pipefail
          QT_URL="https://download.qt.io/archive/qt/6.2/6.2.9/single/qt-everywhere-opensource-src-6.2.9.tar.xz"
          wget -q "${QT_URL}" -O - | tar xJvf -
      - name: Patch
        run: |
          cd qt-everywhere-src-6.2.9/qtbase
          patch -p1 <<EOF
          diff --git a/cmake/QtFrameworkHelpers.cmake b/cmake/QtFrameworkHelpers.cmake
          index 6944fbde90..eeb67afb60 100644
          --- a/cmake/QtFrameworkHelpers.cmake
          +++ b/cmake/QtFrameworkHelpers.cmake
          @@ -27,6 +27,7 @@ macro(qt_find_apple_system_frameworks)
                   qt_internal_find_apple_system_framework(FWWatchKit WatchKit)
                   qt_internal_find_apple_system_framework(FWGameController GameController)
                   qt_internal_find_apple_system_framework(FWCoreBluetooth CoreBluetooth)
          +        qt_internal_find_apple_system_framework(FWOpenGL OpenGL)
               endif()
           endmacro()
           
          diff --git a/src/plugins/platforms/cocoa/CMakeLists.txt b/src/plugins/platforms/cocoa/CMakeLists.txt
          index 21f87dae83..ca318b8c91 100644
          --- a/src/plugins/platforms/cocoa/CMakeLists.txt
          +++ b/src/plugins/platforms/cocoa/CMakeLists.txt
          @@ -93,6 +93,7 @@ qt_internal_add_resource(QCocoaIntegrationPlugin "qcocoaresources"
           qt_internal_extend_target(QCocoaIntegrationPlugin CONDITION QT_FEATURE_opengl
               SOURCES
                   qcocoaglcontext.h qcocoaglcontext.mm
          +    LIBRARIES ${FWOpenGL}
           )
           
           qt_internal_extend_target(QCocoaIntegrationPlugin CONDITION QT_FEATURE_vulkan
          EOF
      - name: Configure
        run: |
          mkdir build
          cd build
          ../qt-everywhere-src-6.2.9/configure \
            -prefix ../install \
            -nomake examples \
            -submodules qt5compat,qtdeclarative,qtimageformats,qtnetworkauth,qtscxml,qtsvg,qttools,qttranslations,qtxmlpatterns \
            -- -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
      - name: Build
        working-directory: ./build
        env:
          NINJA_STATUS: "[%f/%t (%c/s avg %o/s); ETA: %W (%P)]   "
        run: |
          cmake --build . --parallel
      - name: Install
        working-directory: ./build
        run: |
          cmake --install .
      - name: Package
        working-directory: ./install
        run: |
          zip -r "../Qt 6.2.9 for macOS.zip" .
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: "Qt 6.2.9 for macOS"
          path: "Qt 6.2.9 for macOS.zip"
